plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'androidx.navigation.safeargs.kotlin'
}

// keystore.properties file, in the rootProject folder.
def keystorePropertiesFile = rootProject.file("keystore.properties")

// Initialize a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()

// Load your keystore.properties file into the keystoreProperties object.
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

ext {
    VersionCode = 1
    VersionName = '1.0'
}


android {
    compileSdk 31

    signingConfigs {
        config {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    defaultConfig {
        applicationId "com.weather.forecaste"
        minSdk 21
        targetSdk 31
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }


    buildTypes {
        release {
            signingConfig signingConfigs.config
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            signingConfig signingConfigs.config
        }
    }

    flavorDimensions "app", "environment"

    productFlavors {

        weather {
            dimension "app"
            versionCode project.ext.VersionCode
            versionName project.ext.VersionName
        }

        staging {
            dimension "environment"
            applicationIdSuffix ".test"
        }

        prod {
            dimension "environment"
        }

        applicationVariants.all { variant ->
            getProps("./config/${variant.flavorName}.props").each { p ->
                variant.buildConfigField 'String', p.key, p.value
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs += [
                "-Xuse-experimental=kotlinx.coroutines.ExperimentalCoroutinesApi",
                "-Xuse-experimental=kotlinx.coroutines.ObsoleteCoroutinesApi", "-Xuse-experimental=kotlinx.coroutines.FlowPreview"]
    }

    buildFeatures {
        viewBinding true
    }
}

dependencies {

    implementation 'com.google.android.libraries.places:places:2.6.0'
    def retrofit2_version = "2.7.1"
    def okhttp3_version = "4.9.1"
    def room_version = "2.4.2"

    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    //dagger hilt
    implementation "com.google.dagger:hilt-android:2.38.1"
    kapt "com.google.dagger:hilt-compiler:2.38.1"
    implementation 'androidx.hilt:hilt-navigation-fragment:1.0.0'

    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.5.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.0'
    implementation 'androidx.lifecycle:lifecycle-service:2.5.0'


    implementation "androidx.navigation:navigation-runtime-ktx:2.5.0"
    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.0'
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.0'

    implementation "androidx.fragment:fragment-ktx:1.5.0"

    implementation 'com.github.bumptech.glide:glide:4.12.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'

    //Retrofit2
    implementation "com.squareup.retrofit2:retrofit:$retrofit2_version"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2"

    implementation 'com.squareup.retrofit2:converter-jackson:2.9.0'

    //Okhttp3
    implementation "com.squareup.okhttp3:okhttp:$okhttp3_version"
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.0'

    implementation 'com.google.android.gms:play-services-location:20.0.0'

    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.13.+"

    implementation 'com.google.code.gson:gson:2.9.0'

    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    implementation "androidx.room:room-ktx:$room_version"

    implementation("androidx.recyclerview:recyclerview:1.2.1")
}

def getProps(path) {
    Properties props = new Properties()
    props.load(new FileInputStream(file(path)))
    return props
}